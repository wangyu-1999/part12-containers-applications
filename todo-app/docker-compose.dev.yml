services:
  frontend:
    image: todo-frontend-dev
    volumes:
      - ./todo-frontend:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
      - /usr/src/app/node_modules 
    # ports:
    #   - 5173:5173
    # environment:
    #   - VITE_BACKEND_URL=http://localhost:3000
    container_name: todo-frontend-dev # This will name the container hello-front-dev

  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - frontend
      - backend

  debug-helper:    
    image: busybox # docker compose  -f docker-compose.dev.yml run debug-helper wget -O - http://app:5173

  backend:
    image: todo-backend-dev
    # ports:
    #   - 3000:3000
    environment:
      MONGO_URL: mongodb://the_username:the_password@mongo:27017/the_database
      REDIS_URL: redis://redis:6379
    depends_on:
      - mongo
      - redis
    volumes:
      - ./todo-backend:/usr/src/app
      - /usr/src/app/node_modules
    container_name: todo-backend-dev
  
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:       
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - mongo_data:/data/db
  
  redis:
    image: redis
    restart: unless-stopped
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - redis_data:/data

volumes:  
  mongo_data:
  redis_data: